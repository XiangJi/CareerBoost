package DSA.Math.CollatzConjecture;

/*
 * The Collatz Conjecture states that the sequence of positive integers generated by repeated application of the Collatz function will always pass through 1.

Collatz function f(n) :=
3n + 1 n odd
n/2 n even

Examples:
1
f(2) = 1.
f(3) = 10 => f(10) = 5 => f(5) = 16 => f(16) = 8 => f(8) = 4 => f(4) = 2 => f( 2) = 1

In these examples, the transformation was applied once and seven times, resp.
-google 1point3acres
Q1: Write a function that returns the number of transformations needed to first reach 1.

Q2: Write a function that prints the input value and the number of

transformations that maximizes the latter in the range [1 .. N], were N is of the order of
 one million.

findMax(3) -> “3 -> 7”

Input一定会比0大

https://zh.wikipedia.org/wiki/%E8%80%83%E6%8B%89%E5%85%B9%E7%8C%9C%E6%83%B3
指对于每一个正整数，如果它是奇数，则对它乘3再加1，如果它是偶数，则对它除以2，如此循环，最终都能够得到1
奇偶归一猜想

hashmap

void collatz(int n){
  while(n > 1){
    System.out.print(n + "\t->\t");
    n = n % 2 == 0 ? n / 2 : n * 3 + 1;
  }
  System.out.print(1);
}

 */
public class Solution {

}
